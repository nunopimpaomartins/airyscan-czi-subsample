<?xml version="1.0" encoding="utf-8"?>
<Script>
<Context>Zen26</Context>
<Version>1.0</Version>
<Language>Python</Language>
<Text>

# *************** Recorded Code Block ***************
from System.IO import File, Directory, FileInfo, Path 
from System import Environment
import math

strPath = Environment.CurrentDirectory
max_z_slices = 300. # empirical max number of Z planes for Airyscan processing

#GUI WIndow
mainWindow = ZenWindow()
mainWindow.AddFolderBrowser("path1","Image Folder",strPath,"1","0")
mainWindow.AddFolderBrowser("path2","Output Folder",strPath,"2","0")
# mainWindow.AddCheckbox('useCompression', 'Save with compression', True)
wd = mainWindow.Show()

#  Load settings for Airyscan and SplitScenes

if wd.Contains("path1"):
    strPath   = str(wd.GetValue("path1"))
    filesL = Directory.GetFiles(strPath,"*.czi")
    OutPath   = str(wd.GetValue("path2"))
    # saveCompression = wd.GetValue("useCompression")
    Environment.CurrentDirectory = strPath

#Processing files: load image,  create subsets, airyscan process (not yet implemented), split scenes, close

for i in range(0,filesL.Length): 
    file = filesL[i]
    fileInfo = FileInfo(file) 
    PathAndFile = strPath + "\\" + fileInfo.Name
    image = Zen.Application.LoadImage(PathAndFile,False)
    filename_no_ext = image.Name.Substring(0,image.Name.index('.czi'))
    z = float(image.Bounds.SizeZ)

    # stack_range_subets = []
    if z > max_z_slices:
        z_split_factor = int(math.ceil(z / max_z_slices)) # number of substacks per volume to fit in memory
        # for j in range(0, z_split_factor):
            # stack_range_subets.append(str(j))
        stack_range_subets = [str(0)]*z_split_factor
        z_middle = math.floor(z / z_split_factor) # compute substack size to fit in memory
        z_middle_overlap = int(math.ceil(z_middle * 0.05)) # computer substack 5% overlap in Z
    else:
        continue

    for j in range(0, len(stack_range_subets)):
        if j == 0:
            stack_range_subets[j] = "Z("+str(1) + "-" + str(((j + 1) * int(z_middle)) + z_middle_overlap) + ")"
        elif j == len(stack_range_subets)-1:
            stack_range_subets[j] = "Z("+str(int(z)) + "-" + str( ((j) * int(z_middle)) - z_middle_overlap) + ")"
        else:
            # stack_range_subets[j] = "Z("+str(((j + 1) * int(z_middle)) + z_middle_overlap) + "-" + str( j * int(z_middle)) + ")"
            stack_range_subets[j] = "Z(" + str( j * int(z_middle)) + "-" + str(((j + 1) * int(z_middle)) + z_middle_overlap) + ")"

    
    for j in range(0, len(stack_range_subets)):
        substack = Zen.Processing.Utilities.CreateSubset(image, stack_range_subets[j])
        Zen.Application.Documents.Add(substack)
        substack.Name = filename_no_ext + "_sub" + str(j+1)
        Zen.Processing.Utilities.SplitScenes(substack, OutPath, ZenCompressionMethod.Zstd, False, False, False)
        substack.Close()
    
    image.Close()

</Text>
  <Author></Author>
  <Description></Description>
  <Keywords></Keywords>
  <Row>84</Row>
  <Column>17</Column>
</Script>